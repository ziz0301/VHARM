import json

def format_json(input_file, output_file):
    # Read the original JSON file
    with open(input_file, 'r') as infile:
        data = json.load(infile)
    
    # Define a custom JSON encoder to format each object in one line
    class SingleLineJSONEncoder(json.JSONEncoder):
        def encode(self, obj):
            # Encode the object to a JSON string
            json_str = super().encode(obj)
            # Replace the default pretty-print formatting with single-line formatting
            return json_str.replace("}, ", "},\n ").replace("{", " {").replace("[ ", "[").replace("] ", "]").replace(" }", "}")

    # Write the formatted JSON to the output file
    with open(output_file, 'w') as outfile:
        json.dump(data, outfile, cls=SingleLineJSONEncoder, indent=1)

# Define the input and output file paths
input_file = '3.AddVulInIntelKernel.json'
output_file = '3.AddVulInIntelKernel1.json'

# Format the JSON
format_json(input_file, output_file)
